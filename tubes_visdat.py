# -*- coding: utf-8 -*-
"""tubes visdat.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Se9mbdkY2bKqZSrV29ic5ilkD7sgp-Yr
"""

# Commented out IPython magic to ensure Python compatibility.

import os
os.system('pip install bokeh yfinance pandas-datareader requests~=2.23.0 folium==0.2.1')

import pandas as pd
import numpy as np
from pandas_datareader import data as wb
import yfinance as yf
yf.pdr_override()

# Bokeh libraries
from bokeh.io import output_file, output_notebook, curdoc
from bokeh.models import DatetimeTickFormatter
from bokeh.plotting import figure, show
from bokeh.layouts import row, column, gridplot, widgetbox
from bokeh.models.widgets import Tabs, Panel
from bokeh.models import Slider, Select, callbacks, TextInput
from bokeh.models import CategoricalColorMapper
from bokeh.palettes import Spectral6
from bokeh.models import ColumnDataSource, CDSView, GroupFilter, CustomJS, Select, Range1d, Dropdown
from bokeh.models import HoverTool
from bokeh.models.widgets.sliders import DateRangeSlider

tickers = ['ADRO.JK','ANTM.JK','BRIS.JK','BRPT.JK','PTBA.JK','TPIA.JK','CPIN.JK','EMTK.JK','ERAA.JK','INKP.JK','ITMG.JK','INTP.JK','INDF.JK','ICBP.JK',
           'JPFA.JK','KLBF.JK','MNCN.JK','MIKA.JK','TKIM.JK','PTPP.JK','PGAS.JK','SMGR.JK','TLKM.JK','TINS.JK','UNVR.JK','UNTR.JK','INCO.JK','WIKA.JK','EXCL.JK'
]

df = pd.DataFrame()
for saham in tickers:
  data = wb.get_data_yahoo(saham, start='2021-01-01', end= '2025-01-01')
  data['Tic'] = saham
  data.reset_index(inplace=True)
  df = pd.concat([df,data],axis=0)
df.Date = pd.to_datetime(df.Date)
df.drop('Adj Close',axis=1, inplace=True)
df.set_index('Date', inplace=True, drop=True)

output_file('Tubes Visdat.html', title="Saham Viewer")

"""# Creating data source"""

DATA = ColumnDataSource(df)
DATA_BULLISH = ColumnDataSource(df[df.Open < df.Close])
DATA_BEARISH = ColumnDataSource(df[df.Open > df.Close])

VIEW = ColumnDataSource(df[df['Tic'] == 'ADRO.JK'])
BULLISH = ColumnDataSource(df[df.Open < df.Close][df[df.Open < df.Close].Tic == 'ADRO.JK'])
BEARISH = ColumnDataSource(df[df.Open > df.Close][df[df.Open > df.Close].Tic == 'ADRO.JK'])

"""# Creating View"""

# Create the figure
fig = figure(x_axis_type='datetime',
           plot_height=500, plot_width=1200,title='Visualisasi Pergerakan Saham ADRO.JK',
           x_axis_label='Date', y_axis_label='Price', y_axis_type="linear")

# Format the tooltip
tooltips = [('Date','@Date{%F}'),
            ('Open', '@Open'),
            ('High', '@High'),
            ('Low', '@Low'),
            ('Close', '@Close'),
            ('Volume', '@Volume')]


# Add the HoverTool to the figure
fig.add_tools(HoverTool(tooltips=tooltips, formatters={'@Date': 'datetime'}))

fig.line(x='Date',y='Open',color='red', source=VIEW)
fig.vbar(x='Date',top='High',bottom='Low',color='grey',line_width=1,line_alpha=0.8, width=0.5, source=VIEW)

fig.vbar(x='Date', top='Close', bottom='Open'  ,color='green' ,line_width=3 ,width=0.5, source=BULLISH)
fig.vbar(x='Date', top='Open' , bottom='Close' ,color='red'   ,line_width=3 ,width=0.5, source=BEARISH)

# Callbacks
callback_saham = CustomJS(args=dict(source=[DATA,DATA_BULLISH,DATA_BEARISH], sc=[VIEW,BULLISH,BEARISH], title=fig.title), code="""
			var f = cb_obj.value;
			sc[0].data['Date'] = [];
			sc[0].data['Open'] = [];
			sc[0].data['Close'] = [];
			sc[0].data['High'] = [];
			sc[0].data['Low'] = [];
			sc[0].data['Volume'] = [];
		
			sc[1].data['Date'] = [];
			sc[1].data['Open'] = [];
			sc[1].data['Close'] = [];
		
			sc[2].data['Date'] = [];
			sc[2].data['Open'] = [];
			sc[2].data['Close'] = [];

			title.text = 'Visualisasi Pergerakan Saham '+ f
			for(var i = 0; i <= source[0].get_length(); i++){
				if (source[0].data['Tic'][i] == f){
					sc[0].data['Date'].push(source[0].data['Date'][i]);
					sc[0].data['Open'].push(source[0].data['Open'][i]);
					sc[0].data['Close'].push(source[0].data['Close'][i]);
					sc[0].data['High'].push(source[0].data['High'][i]);
					sc[0].data['Low'].push(source[0].data['Low'][i]);
					sc[0].data['Volume'].push(source[0].data['Volume'][i]);
				}
			}
			for(var i = 0; i <= source[1].get_length(); i++){
				if (source[1].data['Tic'][i] == f){
					sc[1].data['Date'].push(source[1].data['Date'][i]);
					sc[1].data['Open'].push(source[1].data['Open'][i]);
					sc[1].data['Close'].push(source[1].data['Close'][i]);
				}
			}
			for(var i = 0; i <= source[2].get_length(); i++){
				if (source[2].data['Tic'][i] == f){
					sc[2].data['Date'].push(source[2].data['Date'][i]);
					sc[2].data['Open'].push(source[2].data['Open'][i]);
					sc[2].data['Close'].push(source[2].data['Close'][i]);
				}
			}
			sc[0].change.emit();
			sc[1].change.emit();
			sc[2].change.emit();
			""")

select_saham = Select(options=list(df.Tic.unique()), value='ADRO.JK', title='Saham')
select_saham.js_on_change('value', callback_saham)


#Create Layout

layout_1 = column(select_saham, fig)
panel = Panel(child = layout_1, title='Saham')
main = Tabs(tabs=[panel])

#show(main)

curdoc().add_root(main) 
